name: CI/CD Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2️⃣ Setup kubeconfig
    - name: Setup kubeconfig
      run: |
        mkdir -p $HOME/.kube
        cat <<EOF > $HOME/.kube/config
        ${{ secrets.KUBECONFIG_DATA }}
        EOF

    # 3️⃣ Install Docker
    - name: Setup Docker
      uses: docker/setup-buildx-action@v3

    # 4️⃣ Setup Node.js (frontend build)
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # 5️⃣ Install Angular CLI
    - name: Install Angular CLI
      run: npm install -g @angular/cli

    # 6️⃣ Build Angular frontend
    - name: Build Angular frontend
      working-directory: ./frontend/my-angular-app
      run: npm ci && ng build --configuration production

    # 7️⃣ Build backend Docker image with Kaniko
    - name: Build backend image with Kaniko
      run: |
        docker run \
          -v $HOME/.kube:/root/.kube \
          -v $PWD/backend:/workspace \
          gcr.io/kaniko-project/executor:latest \
          --dockerfile=/workspace/Dockerfile \
          --context=/workspace \
          --destination=myapp-backend:latest \
          --insecure

    # 8️⃣ Build frontend Docker image with Kaniko
    - name: Build frontend image with Kaniko
      run: |
        docker run \
          -v $HOME/.kube:/root/.kube \
          -v $PWD/frontend:/workspace \
          gcr.io/kaniko-project/executor:latest \
          --dockerfile=/workspace/Dockerfile \
          --context=/workspace \
          --destination=myapp-frontend:latest \
          --insecure

    # 9️⃣ Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: kubectl apply -f k8s/
